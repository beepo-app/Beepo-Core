import * as request from "request-promise-native";
import { Cookie, CookieJar } from "request";
export declare type RPCOptions =
  | request.RequestPromiseOptions
  | request.Options;
export declare class RPC {
  readonly _rpoptions: RPCOptions;
  constructor(options?: RPCOptions);
  get(options?: RPCOptions): Promise<any>;
  post(options?: RPCOptions): Promise<any>;
  put(options?: RPCOptions): Promise<any>;
  patch(options?: RPCOptions): Promise<any>;
  delete(options?: RPCOptions): Promise<any>;
  head(options?: RPCOptions): Promise<any>;
  options(options?: RPCOptions): Promise<any>;
  request(options?: RPCOptions): Promise<any>;
  static cookie(key: string, value: string): Cookie | undefined;
  static jar(cookieStore?: any): CookieJar;
  static defaults(
    options?: request.RequestPromiseOptions
  ): request.RequestPromiseAPI;
  static prepareOptions(
    options: RPCOptions,
    rpoptions: RPCOptions
  ): request.Options;
  private get defaults();
}
